#FIRST PLAYER WILL USE CROSSES
#SECOND PLAYER WILL USE NOUGHTS

import pygame

pygame.init()

width, height = 1200, 800
screen = pygame.display.set_mode((width, height))
pygame.display.set_caption('Noughts & Crosses')

def grid():
    bg = (97, 127, 207)
    grid_lines = (255, 255, 255)
    screen.fill(bg)
    for x in range(1,3):
         #vertical lines
        pygame.draw.line(screen, grid_lines, (300,700), (300,100))
        pygame.draw.line(screen, grid_lines, (500,700), (500,100))
         #horizontal lines
        pygame.draw.line(screen, grid_lines, (100,300), (700,300))
        pygame.draw.line(screen, grid_lines, (100,500), (700,500))

run = True
click = False
position = []
spaces = []
turn = p1      #p1 = first player (crosses)
cross = pygame.image.load('White_Cross.png')
pygame.Surface.convert_alpha()
nought = pygame.image.load('White_Nought.png')
pygame.Surface.convert_alpha()

for x in range(3):
    row = [0]*3
    spaces.append(row)

print(spaces)

topleft = pygame.rect(100,500,200,200)
topmid = pygame.rect(300,500,200,200)
topright = pygame.rect(500,500,200,200)
midleft = pygame.rect(100,300,200,200)
mid = pygame.rect(300,300,200,200)
midright = pygame.rect(500,300,200,200)
botleft = pygame.rect(100,100,200,200)
botmid = pygame.rect(300,100,200,200)
botright = pygame.rect(500,100,200,200)

run = True
while run:
    for event in pygame.event.get():
        if event.type == pygame.quit:
            run = False
            pygame.quit()
            sys.exit()
        while turn == 'p1':   
            if event.type == pygame.MOUSEBUTTONDOWN and click == False:
                click = True
                x,y = pygame.mouse.get_pos()
                position.append(x,y)
                if spaces[x][y] == 0:
                    if topleft.collidepoint(position):
                        row[0][0] = 1 and pygame.surface.blit(cross, position)
                    if midright.collidepoint(position):
                        row[0][1] = 1 and pygame.surface.blit(cross, position)
                    if topright.collidepoint(position):
                        row[0][2] = 1 and pygame.surface.blit(cross, position)
                    if midleft.collidepoint(position):
                        row[1][0] = 1 and pygame.surface.blit(cross, position)
                    if mid.collidepoint(position):
                        row[1][1] = 1 and pygame.surface.blit(cross, position)
                    if midright.collidepoint(position):
                        row[1][2] = 1 and pygame.surface.blit(cross, position)
                    if botleft.collidepoint(position):
                        row[2][0] = 1 and pygame.surface.blit(cross, position)
                    if botmid.collidepoint(position):
                        row[2][1] = 1 and pygame.surface.blit(cross, position)
                    if botright.collidepoint(position):
                        row[2][2] = 1 and pygame.surface.blit(cross,position)
                position.clear() 
            elif event.type == pygame.MOUSEBUTTONUP and click == True:
                click = False
            pygame.display.update
            turn = 'p2'
        while turn == 'p2':
            if event.type == pygame.MOUSEBUTTONDOWN and click == False:
                click = True
                x,y = pygame.mouse.get_pos()
                position.append(x,y)
                if spaces[x][y] == 0:
                    if topleft.collidepoint(position):
                        row[0][0] = 1 and pygame.surface.blit(nought, position)
                    if midright.collidepoint(position):
                        row[0][1] = 1 and pygame.surface.blit(nought, position)
                    if topright.collidepoint(position):
                        row[0][2] = 1 and pygame.surface.blit(nought, position)
                    if midleft.collidepoint(position):
                        row[1][0] = 1 and pygame.surface.blit(nought, position)
                    if mid.collidepoint(position):
                        row[1][1] = 1 and pygame.surface.blit(nought, position)
                    if midright.collidepoint(position):
                        row[1][2] = 1 and pygame.surface.blit(nought, position)
                    if botleft.collidepoint(position):
                        row[2][0] = 1 and pygame.surface.blit(nought, position)
                    if botmid.collidepoint(position):
                        row[2][1] = 1 and pygame.surface.blit(nought, position)
                    if botright.collidepoint(position):
                        row[2][2] = 1 and pygame.surface.blit(nought, position)
                position.clear() 
            elif event.type == pygame.MOUSEBUTTONUP and click == True:
                click = False
            pygame.display.update
