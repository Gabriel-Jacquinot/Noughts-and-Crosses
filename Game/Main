#FIRST PLAYER WILL USE CROSSES
#SECOND PLAYER WILL USE NOUGHTS

import pygame
import sys

pygame.init()

width, height = 1200, 800
screen = pygame.display.set_mode((width, height))
pygame.display.set_caption('Noughts & Crosses')

def grid():
    bg = (112, 137, 156)
    global grid_lines
    grid_lines = (255, 255, 255)
    screen.fill(bg)
    pygame.draw.rect(screen, (80, 103, 120), [0, 0, 1200, 800], width = 10)
    for x in range(1,3):
         #vertical lines
        pygame.draw.line(screen, grid_lines, (300,700), (300,100), width = 3)
        pygame.draw.line(screen, grid_lines, (500,700), (500,100), width = 3)
         #horizontal lines
        pygame.draw.line(screen, grid_lines, (100,300), (700,300), width = 3)
        pygame.draw.line(screen, grid_lines, (100,500), (700,500), width = 3)

def check_winner():
    y_pos = 0
    global end_game 
    global winner
    for x in spaces:
        #COLUMNS
        if sum(x) == 3:     
            winner = '1'
            end_game = True
        if sum(x) == -3:
            winner = '2'
            end_game = True

        #ROWS
        if spaces[0][y_pos] + spaces[1][y_pos] + spaces[2][y_pos] == 3:     
            winner = '1'
            end_game = True
        if spaces[0][y_pos] + spaces[1][y_pos] + spaces[2][y_pos] == -3:
            winner = '2'
            end_game = True
        y_pos += 1

    #DIAGONAL
    if spaces[0][0] + spaces[1][1] + spaces[2][2] == 3 or spaces[2][0] + spaces[1][1] + spaces [0][2] == 3:
        winner = '1'
        end_game = True
    if spaces[0][0] + spaces[1][1] + spaces[2][2] == -3 or spaces[2][0] + spaces[1][1] + spaces [0][2] == -3:
        winner = '2'
        end_game = True

#global
run = True
click = False
end_game = False
player1 = 1
player2 = 2
winner = 0
position = []
spaces = []
turn = 'p1'      #p1 = first player (crosses)
cross = pygame.image.load('White_Cross.png')
pygame.Surface.convert_alpha(cross)
nought = pygame.image.load('White_Nought.png')
pygame.Surface.convert_alpha(nought)

#font
font = pygame.font.SysFont('Verdana', 34)

for x in range(3):
    row = [0]*3
    spaces.append(row)

print(spaces)

topleft = pygame.Rect(100,100,200,200)
topmid = pygame.Rect(300,100,200,200)
topright = pygame.Rect(500,100,200,200)
midleft = pygame.Rect(100,300,200,200)
mid = pygame.Rect(300,300,200,200)
midright = pygame.Rect(500,300,200,200)
botleft = pygame.Rect(100,500,200,200)
botmid = pygame.Rect(300,500,200,200)
botright = pygame.Rect(500,500,200,200)
        
def win_screen(winner):
    win_text = 'Player ' +str(winner)+ ' wins!'
    win_img = font.render(win_text, True, (255,255,255))
    pygame.draw.rect(screen, (151, 164, 186), [200, 200, 400, 400], border_radius = 15)
    pygame.draw.rect(screen, (80, 103, 120), [200, 200, 400, 400], width = 10, border_radius = 15)
    screen.blit(win_img, (285,375))

#BUTTONS
def menu():
    again_box = pygame.draw.rect(screen, (255, 255, 255), [800, 480, 350, 160], width = 10, border_radius = 35)     #Play Again
    again_text = 'Play again'
    again_img = font.render(again_text, True, (255,255,255))
    screen.blit(again_img, (890, 535))

    pygame.draw.rect(screen, (255, 255, 255), [800, 160, 350, 160], width = 10, border_radius = 35)     #Return to menu
    return_text = 'Return to menu'
    return_img = font.render(return_text, True, (255,255,255))
    screen.blit(return_img, (843, 215))

def check_again():
    again_box = pygame.draw.rect(screen, (255, 255, 255), [800, 480, 350, 160], width = 10, border_radius = 35)
    position = []
    x,y = pygame.mouse.get_pos()
    position.append(x)
    position.append(y)
    if again_box.collidepoint(position) and click == True:
        pygame.draw.rect(screen, (112, 137, 156), [90,90,650,650])

        pygame.draw.line(screen, grid_lines, (300,700), (300,100), width = 3)
        pygame.draw.line(screen, grid_lines, (500,700), (500,100), width = 3)

        pygame.draw.line(screen, grid_lines, (100,300), (700,300), width = 3)
        pygame.draw.line(screen, grid_lines, (100,500), (700,500), width = 3)

        return True
        
grid()
menu()
while run == True:
        for event in pygame.event.get():
            pygame.display.update()
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                sys.exit()
            while turn == 'p1':   
                if event.type == pygame.MOUSEBUTTONDOWN and click == False:
                    click = True
                    x,y = pygame.mouse.get_pos()
                    position.append(x)
                    position.append(y)
                    if topleft.collidepoint(position):
                        if spaces[0][0] == 0:
                            pygame.Surface.blit(screen, cross, (110,110))
                            spaces[0][0] = 1 
                    if topmid.collidepoint(position):
                        if spaces[0][1] == 0:
                            pygame.Surface.blit(screen, cross, (310,110))
                            spaces[0][1] = 1 
                    if topright.collidepoint(position):
                        if spaces[0][2] == 0:
                            pygame.Surface.blit(screen, cross, (510,110))
                            spaces[0][2] = 1 
                    if midleft.collidepoint(position):
                        if spaces[1][0] == 0:
                            pygame.Surface.blit(screen, cross, (110,310))
                            spaces[1][0] = 1 
                    if mid.collidepoint(position):
                        if spaces[1][1] == 0:
                            pygame.Surface.blit(screen, cross, (310,310))
                            spaces[1][1] = 1 
                    if midright.collidepoint(position):
                        if spaces[1][2] == 0:
                            pygame.Surface.blit(screen, cross, (510,310))
                            spaces[1][2] = 1 
                    if botleft.collidepoint(position):
                        if spaces[2][0] == 0:
                            pygame.Surface.blit(screen, cross, (110,510))
                            spaces[2][0] = 1 
                    if botmid.collidepoint(position):
                        if spaces[2][1] == 0:
                            pygame.Surface.blit(screen, cross, (310,510))
                            spaces[2][1] = 1 
                    if botright.collidepoint(position):
                        if spaces[2][2] == 0:
                            pygame.Surface.blit(screen, cross, (510,510))
                            spaces[2][2] = 1 
                    position.clear() 
                    turn = 'p2'
                elif event.type == pygame.MOUSEBUTTONUP and click == True:
                    click = False
                check_winner()
                if end_game == True:
                    win_screen(winner)
                    end_game = False
                print(spaces)
                if check_again() == True:
                    spaces.clear()
                    turn = 'p1'
                    for x in range(3):
                        row = [0]*3
                        spaces.append(row)
                break
            while turn == 'p2':
                if event.type == pygame.MOUSEBUTTONDOWN and click == False:
                    click = True
                    x,y = pygame.mouse.get_pos()
                    position.append(x)
                    position.append(y)
                    if topleft.collidepoint(position):
                        if spaces[0][0] == 0:
                            pygame.Surface.blit(screen, nought, (110,110))
                            spaces[0][0] = -1 
                    if topmid.collidepoint(position):
                        if spaces[0][1] == 0:
                            pygame.Surface.blit(screen, nought, (310,110))
                            spaces[0][1] = -1 
                    if topright.collidepoint(position):
                        if spaces[0][2] == 0:
                            pygame.Surface.blit(screen, nought, (510,110))
                            spaces[0][2] = -1 
                    if midleft.collidepoint(position):
                        if spaces[1][0] == 0:
                            pygame.Surface.blit(screen, nought, (110,310))
                            spaces[1][0] = -1 
                    if mid.collidepoint(position):
                        if spaces[1][1] == 0:
                            pygame.Surface.blit(screen, nought, (310,310))
                            spaces[1][1] = -1 
                    if midright.collidepoint(position):
                        if spaces[1][2] == 0:
                            pygame.Surface.blit(screen, nought, (510,310))
                            spaces[1][2] = -1 
                    if botleft.collidepoint(position):
                        if spaces[2][0] == 0:
                            pygame.Surface.blit(screen, nought, (110,510))
                            spaces[2][0] = -1 
                    if botmid.collidepoint(position):
                        if spaces[2][1] == 0:
                            pygame.Surface.blit(screen, nought, (310,510))
                            spaces[2][1] = -1 
                    if botright.collidepoint(position):
                        if spaces[2][2] == 0:
                            pygame.Surface.blit(screen, nought, (510,510))
                            spaces[2][2] = -1 
                    position.clear() 
                    turn = 'p1'
                elif event.type == pygame.MOUSEBUTTONUP and click == True:
                    click = False
                check_winner()
                if end_game == True:
                    win_screen(winner)
                    end_game = False
                if check_again() == True:
                    spaces.clear()
                    turn = 'p1'
                    for x in range(3):
                        row = [0]*3
                        spaces.append(row)
                break

pygame.quit()