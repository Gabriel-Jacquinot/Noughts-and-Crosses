#FIRST PLAYER WILL USE CROSSES
#SECOND PLAYER WILL USE NOUGHTS

import pygame
import sys

pygame.init()

width, height = 1200, 800
screen = pygame.display.set_mode((width, height))
pygame.display.set_caption('Noughts & Crosses')

def grid():
    bg = (97, 127, 207)
    grid_lines = (255, 255, 255)
    screen.fill(bg)
    for x in range(1,3):
         #vertical lines
        pygame.draw.line(screen, grid_lines, (300,700), (300,100))
        pygame.draw.line(screen, grid_lines, (500,700), (500,100))
         #horizontal lines
        pygame.draw.line(screen, grid_lines, (100,300), (700,300))
        pygame.draw.line(screen, grid_lines, (100,500), (700,500))

#global
run = True
end_game = False
click = False
winner = 0
position = []
spaces = []
turn = 'p1'      #p1 = first player (crosses)
cross = pygame.image.load('White_Cross.png')
pygame.Surface.convert_alpha(cross)
nought = pygame.image.load('White_Nought.png')
pygame.Surface.convert_alpha(nought)

#font
font = pygame.font.SysFont('Verdana', 40)

for x in range(3):
    row = [0]*3
    spaces.append(row)

print(spaces)

topleft = pygame.Rect(100,500,200,200)
topmid = pygame.Rect(300,500,200,200)
topright = pygame.Rect(500,500,200,200)
midleft = pygame.Rect(100,300,200,200)
mid = pygame.Rect(300,300,200,200)
midright = pygame.Rect(500,300,200,200)
botleft = pygame.Rect(100,100,200,200)
botmid = pygame.Rect(300,100,200,200)
botright = pygame.Rect(500,100,200,200)

def check_winner():
    y_pos = 0
    for x in spaces:
        #COLUMNS
        if sum(x) == 3:     
            winner = 'p1'
            end_game = True
        if sum(x) == -3:
            winner = 'p2'
            end_game = True
        #ROWS
        if spaces[0][y_pos] + spaces[1][y_pos] + spaces[2][y_pos] == 3:     
            winner = 'p1'
            end_game = True
        if spaces[0][y_pos] + spaces[1][y_pos] + spaces[2][y_pos] == -3:
            winner = 'p2'
            end_game = True
        y_pos += 1
    #DIAGONAL
    if spaces[0][0] + spaces[1][1] + spaces[2][2] == 3 or spaces[2][0] + spaces[1][1] + spaces [0][2] == 3:
        winner = 'p1'
        end_game = True
    if spaces[0][0] + spaces[1][1] + spaces[2][2] == -3 or spaces[2][0] + spaces[1][1] + spaces [0][2] == -3:
        winner = 'p2'
        end_game = True
        
def win_screen(winner):
    win_text = 'Player ' +str(winner)+ ' wins!'
    win_img = font.render(win_text, True, (255,255,255))
    pygame.draw.rect(screen, (151, 164, 186), [200, 200, 400, 400], border_radius = 15)
    screen.blit(win_img, (300,300))

#BUTTONS
pygame.draw.rect(screen, (151, 164, 186), [900, 480, 200, 160], width = 10, border_radius = 15)     #Play Again
again_text = 'Play again'
again_img = font.render(again_text, True, (255,255,255))
screen.blit(again_img, (1000, 500))

pygame.draw.rect(screen, (151, 164, 186), [900, 160, 200, 160], width = 10, border_radius = 15)     #Return to menu
return_text = 'Return to menu'
return_img = font.render(return_text, True, (255,255,255))
screen.blit(return_img, (1000, 180))

while run == True:
    while end_game == False:
        for event in pygame.event.get():
            if event.type == pygame.quit:
                run = False
                pygame.quit()
                sys.exit()
            while turn == 'p1':   
                if event.type == pygame.MOUSEBUTTONDOWN and click == False:
                    click = True
                    x,y = pygame.mouse.get_pos()
                    position.append(x,y)
                    if spaces[x][y] == 0:
                        if topleft.collidepoint(position):
                            row[0][0] = 1 and pygame.surface.blit(cross, (100,500))
                        if topright.collidepoint(position):
                            row[0][1] = 1 and pygame.surface.blit(cross, (300,500))
                        if topright.collidepoint(position):
                            row[0][2] = 1 and pygame.surface.blit(cross, (500,500))
                        if midleft.collidepoint(position):
                            row[1][0] = 1 and pygame.surface.blit(cross, (100,300))
                        if mid.collidepoint(position):
                            row[1][1] = 1 and pygame.surface.blit(cross, (300,300))
                        if midright.collidepoint(position):
                            row[1][2] = 1 and pygame.surface.blit(cross, (500,300))
                        if botleft.collidepoint(position):
                            row[2][0] = 1 and pygame.surface.blit(cross, (100,100))
                        if botmid.collidepoint(position):
                            row[2][1] = 1 and pygame.surface.blit(cross, (300,100))
                        if botright.collidepoint(position):
                            row[2][2] = 1 and pygame.surface.blit(cross, (500,100))
                    position.clear() 
                elif event.type == pygame.MOUSEBUTTONUP and click == True:
                    click = False
                check_winner()
                turn = 'p2'
            while turn == 'p2':
                if event.type == pygame.MOUSEBUTTONDOWN and click == False:
                    click = True
                    x,y = pygame.mouse.get_pos()
                    position.append(x,y)
                    if spaces[x][y] == 0:
                        if topleft.collidepoint(position):
                            row[0][0] = -1 and pygame.surface.blit(nought, (100,500))
                        if midright.collidepoint(position):
                            row[0][1] = -1 and pygame.surface.blit(nought, (300,500))
                        if topright.collidepoint(position):
                            row[0][2] = -1 and pygame.surface.blit(nought, (500,500))
                        if midleft.collidepoint(position):
                            row[1][0] = -1 and pygame.surface.blit(nought, (100,300))
                        if mid.collidepoint(position):
                            row[1][1] = -1 and pygame.surface.blit(nought, (300,300))
                        if midright.collidepoint(position):
                            row[1][2] = -1 and pygame.surface.blit(nought, (500,300))
                        if botleft.collidepoint(position):
                            row[2][0] = -1 and pygame.surface.blit(nought, (100,100))
                        if botmid.collidepoint(position):
                            row[2][1] = -1 and pygame.surface.blit(nought, (300,100))
                        if botright.collidepoint(position):
                            row[2][2] = -1 and pygame.surface.blit(nought, (500,100))
                    position.clear() 
                elif event.type == pygame.MOUSEBUTTONUP and click == True:
                    click = False
                check_winner()
                turn = 'p1'

    if end_game == True:
        win_screen(winner)
pygame.display.update

pygame.quit()
